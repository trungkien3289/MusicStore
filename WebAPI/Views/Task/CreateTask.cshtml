@model MusicStore.BussinessEntity.TaskEntity
@{
    ViewBag.Title = "CreateTask";
    Layout = "~/Views/Shared/_DashBoard_Layout.cshtml";
}

<div class="card-body">
    <h5 class="card-title">New a Task</h5>
    <div style="display: flex; justify-content: center;">
        @using (Html.BeginForm("CreateTask", "Task", FormMethod.Post, new { @class = "needs-validation was-validated col-9" }))
        {
            <div class="form-row">
                <div class="col-md-6 mb-3">
                    <label for="validationCustom01">Name</label>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @id = "validationCustom01", @class = "form-control", required = "", value = "Name" } })
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 mb-3">
                    <label for="validationCustom01">Project</label>
                    @Html.DropDownList("ProjectId", null, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-12 mb-3">
                    <label for="validationCustom03">Description</label>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { type = "textarea", @id = "validationCustom03", @class = "form-control", value = "Name" } })
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-6 mb-3">
                    <label for="validationCustom04">Start Date</label>
                    @Html.TextBoxFor(model => model.StartDate, new { type = "date", @class = "form-control", id = "validationCustom04", required = "" })
                </div>
                <div class="col-md-6 mb-3">
                    <label for="validationCustom05">End Date</label>
                    @Html.TextBoxFor(model => model.EndDate, new { type = "date", @class = "form-control", id = "validationCustom05", required = "" })
                </div>
            </div>
            <button style="float: right" class="btn btn-primary" type="submit">Save</button>
        }
    </div>
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
</div>

